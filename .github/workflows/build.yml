name: Build and Release AnymeX

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: get_prev_tag
        run: |
          echo "Getting the previous tag..."
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "Previous tag retrieved: $PREV_TAG"
          if [ -z "$PREV_TAG" ]; then
            echo "No previous tag found, using the initial commit."
            PREV_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "prev_tag=$PREV_TAG" >> $GITHUB_ENV
          echo "Previous tag: $PREV_TAG"

      - name: Get commit messages between tags
        id: get_commits
        run: |
          echo "Getting commit messages between tags..."
          COMMITS=$(git log ${{ env.prev_tag }}..HEAD --pretty=format:'%h %s' | tr '\n' '|')
          echo "Commits retrieved: $COMMITS"
          echo "commits=$COMMITS" >> $GITHUB_ENV

      - name: Categorize commits
        id: categorize
        run: |
          echo "Categorizing commits..."
          echo "## ${{ github.ref_name }}" > CHANGELOG.md
          FEATURES=""
          BUG_FIXES=""
          REFACTORS=""
          STYLE_CHANGES=""
          PERFORMANCE=""
          CHORES=""
          REPO_URL="https://github.com/${{ github.repository }}"
    
          IFS='|' read -ra COMMIT_LIST <<< "${{ env.commits }}"
          echo "Commit list: ${COMMIT_LIST[@]}"
          for LINE in "${COMMIT_LIST[@]}"; do
            HASH=$(echo "$LINE" | awk '{print $1}')
            MESSAGE=$(echo "$LINE" | cut -d' ' -f2-)
            LINK="[$HASH]($REPO_URL/commit/$HASH)"
        
            FORMATTED_COMMIT="* $LINK: $MESSAGE"
            echo "Processing commit: $FORMATTED_COMMIT"
            if [[ $MESSAGE == feat* ]]; then
              FEATURES+="$FORMATTED_COMMIT\n"
            elif [[ $MESSAGE == fix* || $MESSAGE == bug* || $MESSAGE == improvement* || $MESSAGE == patch* ]]; then
              BUG_FIXES+="$FORMATTED_COMMIT\n"
            elif [[ $MESSAGE == refactor* ]]; then
              REFACTORS+="$FORMATTED_COMMIT\n"
            elif [[ $MESSAGE == style* ]]; then
              STYLE_CHANGES+="$FORMATTED_COMMIT\n"
            elif [[ $MESSAGE == perf* ]]; then
              PERFORMANCE+="$FORMATTED_COMMIT\n"
            elif [[ $MESSAGE == chore* || $MESSAGE == docs* || $MESSAGE == build* || $MESSAGE == ci* ]]; then
              CHORES+="$FORMATTED_COMMIT\n"
            fi
          done
    
          if [ -n "$FEATURES" ]; then
            echo "### 🎉 New Features" >> CHANGELOG.md
            echo -e "$FEATURES" >> CHANGELOG.md
          fi
          if [ -n "$BUG_FIXES" ]; then
            echo "### 🛠️ Bug Fixes & Improvements" >> CHANGELOG.md
            echo -e "$BUG_FIXES" >> CHANGELOG.md
          fi
          if [ -n "$REFACTORS" ]; then
            echo "### 🔧 Refactors" >> CHANGELOG.md
            echo -e "$REFACTORS" >> CHANGELOG.md
          fi
          if [ -n "$STYLE_CHANGES" ]; then
            echo "### 🎨 Style Changes" >> CHANGELOG.md
            echo -e "$STYLE_CHANGES" >> CHANGELOG.md
          fi
          if [ -n "$PERFORMANCE" ]; then
            echo "### 🚀 Performance Improvements" >> CHANGELOG.md
            echo -e "$PERFORMANCE" >> CHANGELOG.md
          fi
          if [ -n "$CHORES" ]; then
            echo "### 🧹 Chores & Documentation" >> CHANGELOG.md
            echo -e "$CHORES" >> CHANGELOG.md
          fi

      - name: Commit and push changelog
        run: |
          echo "Committing and pushing changelog..."
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "Update changelog for version ${{ github.ref_name }}"
          git push origin HEAD:main

      - name: Update Release with Changelog
        uses: ncipollo/release-action@v1
        with:
          bodyFile: "CHANGELOG.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true

  build-android:
    runs-on: ubuntu-latest
    needs: generate-changelog
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.3"

      - name: Get Dependencies
        run: flutter pub get

      - name: Build Android with Split ABI
        run: flutter build apk --split-per-abi

      - name: Rename APKs
        run: |
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/app/outputs/flutter-apk/AnymeX-Android-armeabi-v7a.apk
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/AnymeX-Android-arm64.apk
          mv build/app/outputs/flutter-apk/app-x86_64-release.apk build/app/outputs/flutter-apk/AnymeX-Android-x86_64.apk

      - name: Build Universal APK
        run: flutter build apk --release

      - name: Rename Universal APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/AnymeX-Android-universal.apk

      - name: Release Android APKs
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/AnymeX-Android-*.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}

  build-ios:
    runs-on: macos-latest
    needs: generate-changelog
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.3"

      - name: Get Dependencies
        run: flutter pub get

      - name: Build iOS
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir -p Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r AnymeX-iOS-${{ github.ref_name }}.ipa Payload
          mv AnymeX-iOS-${{ github.ref_name }}.ipa ../../../

      - name: Release iOS IPA
        uses: ncipollo/release-action@v1
        with:
          artifacts: "AnymeX-iOS-*.ipa"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}

  build-linux:
    runs-on: ubuntu-latest
    needs: generate-changelog
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake g++ libgtk-3-dev libblkid-dev liblzma-dev pkg-config libmpv-dev libwebkit2gtk-4.1-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.3"

      - name: Replace pubspec.yaml with Desktop Version
        run: cp pubspec_desktop.yaml pubspec.yaml

      - name: Get Dependencies
        run: flutter pub get

      - name: Replace video file extensions for desktops
        run: |
          mv lib/pages/Desktop/video_controls.darts lib/pages/Desktop/video_controls.dart  
          mv lib/pages/Desktop/watch_page.darts lib/pages/Desktop/watch_page.dart

      - name: Replace main.dart with Desktop Version
        run: mv lib/main.darts lib/main.dart     

      - name: Build Linux
        run: flutter build linux --release

      - name: Zip Linux Artifacts
        run: |
          cd build/linux/x64/release/bundle
          zip -r ../../../../../AnymeX-Linux.zip .

      - name: Release Linux Build
        uses: ncipollo/release-action@v1
        with:
          artifacts: "AnymeX-Linux.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}

  build-windows:
    runs-on: windows-latest
    needs: generate-changelog
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.3"

      - name: Replace pubspec.yaml with Desktop Version
        run: Copy-Item -Path pubspec_desktop.yaml -Destination pubspec.yaml -Force

      - name: Replace main.dart with Desktop Version
        run: Move-Item -Path lib\main.darts -Destination lib\main.dart -Force

      - name: Replace video file extensions for desktops
        run: |
          Move-Item -Path lib\pages\Desktop\video_controls.darts -Destination lib\pages\Desktop\video_controls.dart -Force
          Move-Item -Path lib\pages\Desktop\watch_page.darts -Destination lib\pages\Desktop\watch_page.dart -Force

      - name: Get Dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Create ZIP file for Windows Build
        run: |
          cd build/windows/x64/runner/Release
          Compress-Archive -Path * -DestinationPath AnymeX-Windows.zip

      - name: Setup Inno Setup
        run: choco install innosetup -y

      - name: Build Installer with Inno Setup
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" inno.iss

      - name: Release Windows Builds
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/windows/x64/runner/Release/AnymeX-Windows.zip,output/AnymeX-Setup.exe"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}

  build-macos:
    runs-on: macos-latest
    needs: generate-changelog
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.3"

      - name: Replace pubspec.yaml with Desktop Version
        run: cp pubspec_macos.yaml pubspec.yaml

      - name: Replace main.dart with Desktop Version
        run: mv lib/main.darts lib/main.dart

      - name: Replace video file extensions for desktops
        run: |
          mv lib/pages/Desktop/video_controls.darts lib/pages/Desktop/video_controls.dart  
          mv lib/pages/Desktop/watch_page.darts lib/pages/Desktop/watch_page.dart
          mv lib/auth/auth_provider_macos.dart lib/auth/auth_provider.dart

      - name: Get Dependencies
        run: flutter pub get

      - name: Build macOS
        run: flutter build macos --release

      - name: Create DMG file for macOS Build
        run: |
          mkdir -p build/macos/Release
          hdiutil create -volname "AnymeX" -srcfolder build/macos/Build/Products/Release/AnymeX.app -ov -format UDZO build/macos/Release/AnymeX.dmg

      - name: Release macOS Builds
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/macos/Release/AnymeX.dmg"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}
