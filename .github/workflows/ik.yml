name: Test Platform Messaging

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  test-platform-messages:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set random test links
        run: |
          echo "ANDROID_ARM64_LINK=https://example.com/android-arm64-v1.0.0.apk" >> $GITHUB_ENV
          echo "ANDROID_ARMEABI_LINK=https://example.com/android-armeabi-v7a-v1.0.0.apk" >> $GITHUB_ENV
          echo "ANDROID_UNIVERSAL_LINK=https://example.com/android-universal-v1.0.0.apk" >> $GITHUB_ENV
          echo "ANDROID_X86_LINK=https://example.com/android-x86-v1.0.0.apk" >> $GITHUB_ENV
          echo "WINDOWS_ZIP_LINK=https://example.com/windows-v1.0.0.zip" >> $GITHUB_ENV
          echo "WINDOWS_EXE_LINK=https://example.com/windows-v1.0.0.exe" >> $GITHUB_ENV
          echo "LINUX_ZIP_LINK=https://example.com/linux-v1.0.0.zip" >> $GITHUB_ENV
          echo "LINUX_APPIMAGE_LINK=https://example.com/linux-v1.0.0.AppImage" >> $GITHUB_ENV
          echo "LINUX_RPM_LINK=https://example.com/linux-v1.0.0.rpm" >> $GITHUB_ENV
          echo "IOS_LINK=https://example.com/ios-v1.0.0.ipa" >> $GITHUB_ENV
          echo "MACOS_LINK=https://example.com/macos-v1.0.0.dmg" >> $GITHUB_ENV

          # Check and send individual Discord messages
          if [[ -n "$ANDROID_ARM64_LINK" ]]; then 
            ANDROID_ARM64="[Download]($ANDROID_ARM64_LINK) | **Android (arm64)**"
          else
            ANDROID_ARM64=""
          fi

          if [[ -n "$ANDROID_ARMEABI_LINK" ]]; then 
            ANDROID_ARMEABI="[Download]($ANDROID_ARMEABI_LINK) | **Android (armeabi-v7a)**"
          else
            ANDROID_ARMEABI=""
          fi

          if [[ -n "$ANDROID_X86_LINK" ]]; then 
            ANDROID_X86="[Download]($ANDROID_X86_LINK) | **Android (x86 & x64)**"
          else
            ANDROID_X86=""
          fi

          if [[ -n "$ANDROID_UNIVERSAL_LINK" ]]; then 
            ANDROID_UNIVERSAL="[Download]($ANDROID_UNIVERSAL_LINK) | **Android (universal)**"
          else
            ANDROID_UNIVERSAL=""
          fi

          if [[ -n "$IOS_LINK" ]]; then 
            IOS_MESSAGE="[Download]($IOS_LINK) | **iOS**"
          else
            IOS_MESSAGE=""
          fi

          if [[ -n "$LINUX_ZIP_LINK" ]]; then 
            LINUX_MESSAGE="[Download]($LINUX_ZIP_LINK) | **Linux ZIP**"
          else
            LINUX_MESSAGE=""
          fi

          if [[ -n "$LINUX_APPIMAGE_LINK" ]]; then 
            LINUX_APPIMAGE="[Download]($LINUX_APPIMAGE_LINK) | **Linux AppImage**"
          else
            LINUX_APPIMAGE=""
          fi

          if [[ -n "$LINUX_RPM_LINK" ]]; then 
            LINUX_RPM="[Download]($LINUX_RPM_LINK) | **Linux RPM**"
          else
            LINUX_RPM=""
          fi

          if [[ -n "$WINDOWS_ZIP_LINK" ]]; then 
            WINDOWS_MESSAGE="[Download]($WINDOWS_ZIP_LINK) | **Windows ZIP**"
          else
            WINDOWS_MESSAGE=""
          fi

          if [[ -n "$WINDOWS_EXE_LINK" ]]; then 
            WINDOWS_EXE="[Download]($WINDOWS_EXE_LINK) | **Windows EXE**"
          else
            WINDOWS_EXE=""
          fi

          if [[ -n "$MACOS_LINK" ]]; then 
            MACOS_MESSAGE="[Download]($MACOS_LINK) | **macOS**"
          else
            MACOS_MESSAGE=""
          fi

          # Prepare and send the Discord message
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"ðŸ”¹ ${ANDROID_ARM64}\nðŸ”¹ ${ANDROID_ARMEABI}\nðŸ”¹ ${ANDROID_X86}\nðŸ”¹ ${ANDROID_UNIVERSAL}\nðŸ”¹ ${IOS_MESSAGE}\nðŸ”¹ ${LINUX_MESSAGE}\nðŸ”¹ ${LINUX_APPIMAGE}\nðŸ”¹ ${LINUX_RPM}\nðŸ”¹ ${WINDOWS_MESSAGE}\nðŸ”¹ ${WINDOWS_EXE}\nðŸ”¹ ${MACOS_MESSAGE}\"}" \
               "${{ secrets.DISCORD_WEBHOOK_ALPHA }}"
